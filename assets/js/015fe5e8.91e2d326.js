"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[3696],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(k,i(i({ref:t},l),{},{components:n})):r.createElement(k,i({ref:t},l))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[m]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},37380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={description:"Detect the MetaMask Ethereum provider object.",sidebar_position:2},i="Detect MetaMask",p={unversionedId:"how-to/connect/detect-metamask",id:"how-to/connect/detect-metamask",title:"Detect MetaMask",description:"Detect the MetaMask Ethereum provider object.",source:"@site/wallet/how-to/connect/detect-metamask.md",sourceDirName:"how-to/connect",slug:"/how-to/connect/detect-metamask",permalink:"/wallet/how-to/connect/detect-metamask",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/connect/detect-metamask.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Detect the MetaMask Ethereum provider object.",sidebar_position:2},sidebar:"walletSidebar",previous:{title:"Native Android (coming soon)",permalink:"/wallet/how-to/connect/set-up-sdk/mobile/android"},next:{title:"Detect a user's network",permalink:"/wallet/how-to/connect/detect-network"}},s={},c=[{value:"Use @metamask/detect-provider",id:"use-metamaskdetect-provider",level:2},{value:"Compile the module",id:"compile-the-module",level:3}],l={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"detect-metamask"},"Detect MetaMask"),(0,a.kt)("p",null,"The presence of the MetaMask Ethereum provider object, ",(0,a.kt)("inlineCode",{parentName:"p"},"window.ethereum"),", in a user's browser\nindicates an Ethereum user."),(0,a.kt)("p",null,"To demonstrate this, verify if your browser is running MetaMask by copying and pasting the following\ncode snippet in the developer console of your browser:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"if (typeof window.ethereum !== 'undefined') {\n  console.log('MetaMask is installed!');\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"To differentiate MetaMask from other Ethereum-compatible browsers, you can detect MetaMask using the\n",(0,a.kt)("a",{parentName:"p",href:"/wallet/reference/provider-api#windowethereumismetamask"},(0,a.kt)("inlineCode",{parentName:"a"},"window.ethereum.isMetaMask"))," property.")),(0,a.kt)("h2",{id:"use-metamaskdetect-provider"},"Use @metamask/detect-provider"),(0,a.kt)("p",null,"We recommend using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/detect-provider"},(0,a.kt)("inlineCode",{parentName:"a"},"@metamask/detect-provider")),"\nmodule to detect the MetaMask Ethereum provider on any platform or browser."),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},"npm")," to install\n",(0,a.kt)("inlineCode",{parentName:"p"},"@metamask/detect-provider")," in your project directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @metamask/detect-provider\n")),(0,a.kt)("p",null,"For example, the following code detects the provider using ",(0,a.kt)("inlineCode",{parentName:"p"},"@metamask/detect-provider"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},"// This function detects most providers injected at window.ethereum.\nimport detectEthereumProvider from '@metamask/detect-provider';\n\n// This returns the provider, or null if it wasn't detected.\nconst provider = await detectEthereumProvider();\n\nif (provider) {\n  // From now on, this should always be true:\n  // provider === window.ethereum\n  startApp(provider); // initialize your app\n} else {\n  console.log('Please install MetaMask!');\n}\n\nfunction startApp(provider) {\n  // If the provider returned by detectEthereumProvider isn't the same as\n  // window.ethereum, something is overwriting it \u2013 perhaps another wallet.\n  if (provider !== window.ethereum) {\n    console.error('Do you have multiple wallets installed?');\n  }\n  // Access the decentralized web!\n}\n")),(0,a.kt)("h3",{id:"compile-the-module"},"Compile the module"),(0,a.kt)("p",null,"Use a bundler such as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webpack/webpack"},"Webpack")," to compile the module and create\nan output script.\nInstall Webpack in your project directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save-dev webpack\n")),(0,a.kt)("p",null,"Install the Webpack CLI:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save-dev webpack-cli\n")),(0,a.kt)("p",null,"Compile the module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx webpack\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"When compiling the module, you might need to pass CLI options such as\n",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/experiments/"},(0,a.kt)("inlineCode",{parentName:"a"},"--experiments-top-level-await")),".\nYou can alternatively specify options in a configuration file as follows:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="webpack.config.cjs"',title:'"webpack.config.cjs"'},"module.exports = {\n    experiments: {\n        topLevelAwait: true,\n    },\n};\n"))),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"npx webpack")," again upon any changes to ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js"),".\nSee ",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/guides/getting-started/"},"Webpack's Getting Started guide")," for more information."))}d.isMDXComponent=!0}}]);